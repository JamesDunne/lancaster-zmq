LanCaster - Multiple-client file transfer protocol for LANs

(C)opyright 2011 James S. Dunne, lancaster@bittwiddlers.org

What is it?
-----------
LanCaster is a pair of console tools for sending folders to multiple subscribed clients. These tools use ZeroMQ (www.zeromq.org) for data transfer. The server process is named LCS (LanCaster Server) and acts as a publisher of file data to subscribers. The client process is named LCC (LanCaster Client) and subscribes to the publisher and gets the listing of files and downloads the chunks of data broadcast to a local folder, creating the files as it goes.

NOTES
-----
The client LCC stores a local state-tracking folder in the download folder named '.lcc'. This simply keeps track of which chunks of the transfer have been received and which have not in case of an early termination of the client. When the transfer completes successfully, the folder is deleted so as to not dirty the download.

TODO
----
GUI tools for client and server.
Possibly SHA1 hash verification per file, but hash mismatches between client/server would only indicate presence of bugs in the client/server code. ZeroMQ guarantees complete message delivery or no message at all. I doubt there'd be any data loss to warrant such SHA1 hash calculations.
Packaging of transfers into uniquely-identifiable objects, much like a torrent. This would help clients uniquely identify a transfer, which transfers have completed.
A daemon mode for the client to auto-accept transfers and download them to known locations - ideal for server farm deployments.
Make clients REJOIN the server after server dies and comes back up again. Currently they are stuck on a blocking Recv call which will never be satisfied.
Switch from TCP to EPGM protocol for multicast network efficiency. The Windows build of libzmq does not include EPGM support by default, and doing so does not look simple nor easy at the moment.